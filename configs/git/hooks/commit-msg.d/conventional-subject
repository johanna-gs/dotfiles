#!/usr/bin/env bash
# Validates that a commit message file ($1) looks like a conventional commit message.
# We are really just checking the subject line here, not the body.

set -u -o pipefail

RED='\033[0;31m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m'

regex='^(revert: )?(feat|fix|docs|style|refactor|perf|test|chore|build|ci)(\(.+\))?!?: [^[:space:]].+$'

subject=$(head -n 1 $1)

if [[ ! $subject =~ $regex ]]; then
  >&2 echo -e "${RED}ERROR${NC}: Commit message subject does not match the conventional commit format."
  >&2 echo "       Format should be: 'type(optional scope): subject'"
  >&2 echo -e "${BLUE}TIP${NC}: You can recover your message with:" 'git commit -eF $(git rev-parse --git-dir)/COMMIT_EDITMSG'
  exit 1
fi

# subject length less than 72 chars is a good practice
if [ ${#subject} -gt 72 ]; then
  >&2 echo -e "${YELLOW}WARNING${NC}: Commit message subject is longer than 72 characters."
  >&2 echo "         Consider 'git commit --amend' to shorten it."
fi

exit 0
