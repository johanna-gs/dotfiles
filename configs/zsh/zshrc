#!/usr/bin/env zsh

# .zshenv is loaded before anything happens here!
[ -f ~/.zshenv ] && source ~/.zshenv

# Functions
[ -f ~/.config/zsh/functions.zsh ] && source ~/.config/zsh/functions.zsh

# Aliases
[ -f ~/.config/zsh/aliases.zsh ] && source ~/.config/zsh/aliases.zsh

# Source starship environment if it exists
[ -f ~/.config/zsh/starship.zsh ] && source ~/.config/zsh/starship.zsh

# Source wsl environment if it exists
[ -f ~/.config/zsh/wsl.zsh ] && source ~/.config/zsh/wsl.zsh

# Source mac environment if it exists
[ -f ~/.config/zsh/mac.zsh ] && source ~/.config/zsh/mac.zsh

# Source rust environment if it exists
[ -f ~/.cargo/env ] && source ~/.cargo/env

case $(uname) in
Linux)
  brew_home=/home/linuxbrew/.linuxbrew

  if service docker status 2>&1 | grep -q "is not running"; then
    wsl.exe -d "${WSL_DISTRO_NAME}" -u root -e /usr/sbin/service docker start >/dev/null 2>&1
  fi

  ;;
Darwin)
  brew_home=/opt/homebrew
  ;;
esac

if [ -d "${brew_home}" ]; then
  export PATH=${brew_home}/bin:$PATH
fi

export PATH=$PATH:/usr/local/go/bin

## History command configuration
HISTSIZE=5000                 # How many lines of history to keep in memory
HISTFILE=~/.zsh_history       # Where to save history to disk
SAVEHIST=5000                 # Number of history entries to save to disk
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt inc_append_history     # add commands to HISTFILE in order of execution
setopt share_history          # share command history data

# Install starship if it doesn't exist
if ! command_exists starship; then
  curl -sS https://starship.rs/install.sh | sh

  local retVal=$?

  if [ $retVal -ne 0 ]; then
    echo "❌ starship could not be installed"
  else
    echo "✅ starship installed"
  fi
fi

# Install jetbrains toolbox if it doesn't exist
if ! command_exists jetbrains-toolbox; then
  install_toolbox
fi

# Install jetbrains nerd font if it doesn't exist
if ! fc-list | grep -i "JetBrainsMono" > /dev/null; then
  install_nerdFont
fi

# create wayland symlink if it doesn't exist
if [ ! -L "$XDG_RUNTIME_DIR/wayland-*" ]; then
  create_wayland_symlink
fi

# install ghostty if not installed
if ! command_exists ghostty; then
  install_ghostty
fi

# Source the starship initialization script
eval "$(starship init zsh)"

# Source plugins
[[ -f ~/dotfiles/configs/zsh/plugins/plugins.zsh ]] && source ~/dotfiles/configs/zsh/plugins/plugins.zsh

# autoload -Uz compinit bashcompinit && compinit && bashcompinit
autoload -Uz compinit && compinit

# Source kubectl completion
command -v kubectl >/dev/null 2>&1 && source ~/.config/zsh/autocomplete/kubectl

# # ASDF
[ -f "$(brew --prefix asdf)/libexec/asdf.sh" ] && source "$(brew --prefix asdf)/libexec/asdf.sh"

# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C ~/.local/lib/vault/1.7.0/vault vault
